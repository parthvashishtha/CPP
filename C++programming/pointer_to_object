    #include <iostream>
    using namespace std;

    class ComplexN
    {
    private:
        int real;
        float imaginary;

    public:

        ComplexN(){

            cout<<"Default constructor called"<<endl;

        }

        ComplexN(int r, float i){
            real=r;
            imaginary=i;
        }

        void  displayData()
        {
            cout<<"Complex number is:"<<real<<"+"<<imaginary<<"i"<<endl<<endl;
        }

        int getrealPart()
        {
            return real;
        }

        float getimaginaryPart()
        {
            return imaginary;
        }
        
    };

    ComplexN addcompnumber(ComplexN n1,ComplexN n2)
    {
        int r;
        float i;
        r= n1.getrealPart() + n2.getrealPart();
        i= n1.getimaginaryPart() + n2.getimaginaryPart();
        ComplexN temp(r,i);
        return temp;

    }
    
    
    

    int main()
    {

        ComplexN comp1(2,3), comp2(4,5), comp3;
        comp1.displayData();
        comp2.displayData();

        cout<<"Addition of given comp. numbers is:"<<endl;
        comp3= addcompnumber(comp1,comp2);
        comp3.displayData();

        cout<<"Pointer to object"<<endl<<endl;
        ComplexN *ptr;
        ptr = &comp1;
        ptr -> displayData();
        ptr =&comp2;
        ptr->displayData();



    return 0;
    }
